name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run with debug logging'
        required: false
        default: false
        type: boolean
      build_type:
        description: 'Build type'
        required: false
        default: 'Release'
        type: choice
        options:
          - Debug
          - Release
          - RelWithDebInfo

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x86, x64]
        include:
          - arch: x86
            generator: "Visual Studio 17 2022"
            arch-flag: "-A Win32"
          - arch: x64
            generator: "Visual Studio 17 2022"
            arch-flag: "-A x64"
    steps:
    - uses: actions/checkout@v3
    - name: Configure CMake
      run: cmake -B build -G "${{ matrix.generator }}" ${{ matrix.arch-flag }} -DCMAKE_BUILD_TYPE=${{ inputs.build_type || 'Release' }} -DBUILD_BENCHMARKS=OFF
    - name: Build
      run: cmake --build build --config ${{ inputs.build_type || 'Release' }}
    - name: Test
      run: |
        cd build
        ctest -C ${{ inputs.build_type || 'Release' }} --output-on-failure

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64, arm64]
        include:
          - arch: x64
            cc: gcc
            cxx: g++
            packages: >-
              llvm-dev
              libpcre3-dev
              libstdc++-11-dev
              libc6-dev
          - arch: arm64
            cc: aarch64-linux-gnu-gcc
            cxx: aarch64-linux-gnu-g++
            packages: >-
              gcc-aarch64-linux-gnu
              g++-aarch64-linux-gnu
              llvm-dev:arm64
              libpcre3-dev:arm64
              libstdc++-11-dev:arm64
              libc6-dev:arm64
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up dependencies
      run: |
        if [ "${{ matrix.arch }}" = "arm64" ]; then
          sudo dpkg --add-architecture arm64
        fi
        sudo apt-get update
        sudo apt-get install -y ${{ matrix.packages }}
        
    - name: Configure CMake
      env:
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=${{ inputs.build_type || 'Release' }} \
          -DBUILD_BENCHMARKS=OFF \
          -DCMAKE_CXX_FLAGS="${{ matrix.arch == 'arm64' && '-Wno-psabi' || '' }}"
        
    - name: Build
      run: cmake --build build
      
    - name: Test
      if: matrix.arch == 'x64'  # Only run tests on native architecture
      run: |
        cd build
        ctest --output-on-failure

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x86_64, arm64]
    steps:
    - uses: actions/checkout@v3
    - name: Configure CMake
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=${{ inputs.build_type || 'Release' }} \
          -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch }} \
          -DBUILD_BENCHMARKS=OFF
    - name: Build
      run: cmake --build build
    - name: Test
      if: matrix.arch == 'x86_64'  # Only run tests on native architecture
      run: |
        cd build
        ctest --output-on-failure
